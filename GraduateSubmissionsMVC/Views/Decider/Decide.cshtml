@model GraduateSubmissionsMVC.Models.ReviewViewModel

@{
    ViewBag.Title = "Decide";
}

<h2>Review -- @Model.Application.firstname @Html.Raw(" ") @Model.Application.lastname</h2>

@using (Html.BeginForm("Decide", "Decider", FormMethod.Post))
{
    @Html.HiddenFor(x => x.Application.ID)
    <div class="review-box">

        Term: @Html.DisplayFor(model => model.Term.Name) @Html.DisplayFor(model => model.Term.Date)
        <br />
        <br />
        First Name: @Html.DisplayFor(model => model.Application.firstname)
        <br />
        <br />
        Last Name: @Html.DisplayFor(model => model.Application.lastname)
        <br />
        <br />
        Number: @Html.DisplayFor(model => model.Application.number)
        <br />
        <br />
        E-mail: @Html.DisplayFor(model => model.Application.email)
        <br />
        <br />
        Personal Info: @Html.DisplayFor(model => model.Application.PersonalInfo)
        <br />
        <br />
        Applied Before:@if(Model.Application.AppliedBefore == false){ @Html.Raw("No") } else { @Html.Raw("Yes") } 
        <br />
        <br />
        Date Applied Before: @Html.DisplayFor(model => model.Application.DateAppliedBefore)
        <br />
        <br />
        Departments: 
                @for (int i = 0, k = 1; i < Model.DepartmentList.Count; i++, k++)
                {
                    @Html.Raw(k + ". " + Model.DepartmentList[i].Name + "<br />")
                }
        <br />
        PDF: 
                @for (int i = 0, k = 1; i < Model.PDFurlList.Count; i++, k++)
                {
                   <a href="@Url.Content("~/" + @Model.PDFurlList[i].Url.Substring(72))" target="_blank">@Model.PDFurlList[i].Url.Substring(82).Replace(".pdf", String.Empty)</a>
                }
    </div>

    <div class="transition-box">
        @if (!Model.exists)
        {
            foreach (var item in Model.TransitionCoursesList)
            {
                <table class="table-unit">
                    <tr>
                        <th>
						    @item.TransitionCourseModel.Name @item.TransitionCourseModel.Number - @item.TransitionCourseModel.Description - @item.TransitionCourseModel.CreditHour Credit Hours 
					    </th> 
					    <th>@Html.DropDownListFor(model => model.Transition, item.TransitionOptionSelectListItem, "-- Select One --")</th>
                    </tr>
                </table>
                <br />
            }
        }
        else
        {
            foreach (var item in Model.TransitionCoursesExist)
            {
                <table class="table-unit">
                    <tr>
                        <th>
						    @item.TransitionCourseModel.Name @item.TransitionCourseModel.Number - @item.TransitionCourseModel.Description - @item.TransitionCourseModel.CreditHour Credit Hours 
					    </th> 
					    <th>@Html.DropDownListFor(model => model.Transition, item.TransitionOptionSelectListItem, "-- Select One --")</th>
                    </tr>
                </table>
                <br />
            }
        }
    </div>

    <div class="comment-box">
        @Html.Raw("General Comments: <br />")
        @Html.EditorFor(modelItem => modelItem.ReviewerModel.Comment)
    </div>
    
    <div class="comment-box">
        @Html.Raw("Decision Comments: <br />")
        @Html.EditorFor(modelItem => modelItem.ReviewerModel.DecisionComment)
    </div>
    
    <div class="upload-unit" style="margin-left:auto; margin-right:auto; width:200px">
        <br />
        <p>
            <input type="submit" value="Save Review" />
        </p>
    </div>
}